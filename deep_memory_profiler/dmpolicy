heap profile policy: POLICY_DEEP_2
#
# This file contains a classification policy for dmprof.py.
#
# Each line indicates a group to be classified and conditions for classifying
# in the following format.
#   Format: <group-name> <region-type> <pattern>
#
# <group-name> is a name for the group to be classified.  Same names can appear
# in the same policy file multiple times.  <region-type> represents a type of
# the memory region.  It's one of {malloc, mmap, default, optional}.  <pattern>
# is a Python-style regular expression to match with calling stack frames.
#
# For each memory chunks allocated by malloc, its calling stack frame of malloc
# is compared with these classification policies whose <region-type> is 'malloc'
# from the top.  If <pattern> of the policy matches the frame, the memory chunk
# is classified into <group-name>.  The same way for 'mmap'.
#
# Policy lines whose <region-type>s are 'optional' and 'default' are used by
# dmprof.py internally.  'optional' policies can be disabled by removing or
# commenting-out.
#
second				optional	optional
minute				optional	optional
unknown				optional	optional
total-exclude-profiler		optional	optional
#total				optional	optional
#anonymous			optional	optional
#filemapped			optional	optional
#other				optional	optional
#total-vm			optional	optional
#anonymous-vm			optional	optional
#filemapped-vm			optional	optional
#other-vm			optional	optional
#vm-profiler			optional	optional
#vm-total			optional	optional
no-bucket			default	default
mmap-profiler			mmap	.*(ProfilerMalloc|MemoryRegionMap::).*
mmap-tcmalloc			mmap	.*(DoAllocWithArena|SbrkSysAllocator::Alloc|MmapSysAllocator::Alloc|LowLevelAlloc::Alloc|LowLevelAlloc::AllocWithArena).*
mmap-v8-heap-new		mmap	.*v8::.*::ReserveInitialChunk.*
mmap-v8-heap-coderange		mmap	.*v8::.*::CodeRange::Setup.*
mmap-v8-heap-old-evacuate	mmap	.*v8::.*::OldSpace::.* v8::internal::ScavengingVisitor::EvacuateObject.*
mmap-v8-heap-old		mmap	.*v8::.*::OldSpace::.*
mmap-v8-heap-largeobj		mmap	.*v8::.*::LargeObjectChunk::New.*
mmap-v8-heap-other		mmap	.*VirtualMemory.*
mmap-v8-heap-other		mmap	.*v8::internal::OS::Allocate.*
mmap-v8-nonheap			mmap	.*v8::.*
#mmap-webkit			mmap	.*(WTF::|WebCore::|WebKit::).*
#mmap-sqlite			mmap	.*sqlite3MemMalloc.*
#mmap-pl-arena			mmap	.*PL_ArenaAllocate.*
#mmap-sk			mmap	.*sk_malloc_flags.*
mmap-no-policy			mmap	.*
mmap-total-log			default	default
mmap-no-log			default	default
mmap-total-record		default	default
#mmap-total-record-vm		default	default
tc-webcore-attreventlistener	malloc	.*WebCore::createAttributeEventListener.*
tc-webcore-v8lazyeventlistener	malloc	.*WebCore::V8LazyEventListener::create.*
tc-webcore-v8eventlistener	malloc	.*WebCore::V8EventListener::create.*
tc-v8-heap			malloc	.*v8::.*::ReserveInitialChunk.*
tc-v8-heap			malloc	.*v8::.*::CodeRange::Setup.*
tc-v8-heap			malloc	.*v8::.*::OldSpace::.*
tc-v8-heap			malloc	.*v8::.*::LargeObjectChunk::New.*
tc-v8-heap			malloc	.*VirtualMemory.*
tc-v8-heap			malloc	.*v8::internal::OS::Allocate.*
tc-webcore-event		malloc	.*WebCore::Event::create .*
tc-webcore-document		malloc	.*WebCore::Document::create .*
tc-webcore-node			malloc	.*WebCore::Node::create .*
tc-webcore-eventlistener	malloc	.*WebCore::EventListener::create .*
tc-wtf-stringimpl		malloc	.*WTF::StringImpl::create .*
tc-webcore-cachedresource	malloc	.*WebCore::CachedResource::load .*
tc-webcore-domwindow		malloc	.*WebCore::DOMWindow::create .*
tc-webkit-shrinkToFit		malloc	.*WTF::StringImpl::createUninitialized WTF::StringBuilder::shrinkToFit WebCore::XMLHttpRequest::didFinishLoading.*
tc-webkit-StringImpl12		malloc	.*WTF::StringImpl::createUninitialized WTF::StringBuilder::shrinkToFit WTF::StringBuilder::toString.*
tc-webkit-KURLgoogle-v8		malloc	.*WTF::StringImpl::createUninitialized WTF::StringImpl::create String WebCore::KURLGooglePrivate::string WebCore::KURL::string WTF::String WebCore::V8XMLHttpRequest::sendCallback.*
tc-webkit-KURLgoogle		malloc	.*WTF::StringImpl::createUninitialized WTF::StringImpl::create String WebCore::KURLGooglePrivate::string.*
tc-webkit-StringAMTB		malloc	.*WTF::StringImpl::createUninitialized WTF::StringImpl::create String WebCore::AtomicMarkupTokenBase::.*
tc-webkit-StringImpl2		malloc	.*WTF::StringImpl::createUninitialized WTF::StringImpl::create.*
tc-webkit-StringImpl3		malloc	.*WTF::StringImpl::createUninitialized WTF::String::append.*
tc-webkit-StringImpl4		malloc	.*WTF::StringImpl::createUninitialized WTF::String::fromUTF8.*
tc-webkit-StringImpl5		malloc	.*WTF::StringImpl::createUninitialized WTF::StringBuilder::allocateBuffer.*
tc-webkit-StringImpl6		malloc	.*WTF::StringImpl::createUninitialized WTF::String::createUninitialized.*
tc-webkit-StringImpl7		malloc	.*WTF::StringImpl::createUninitialized WTF::StringImpl::upper.*
tc-webkit-StringImpl8		malloc	.*WTF::StringImpl::createUninitialized WTF::StringImpl::replace.*
tc-webkit-StringImpl		malloc	.*WTF::StringImpl::createUninitialized.*
tc-webkit-htmlElement   	malloc	.*WebCore::HTMLElementFactory::createHTMLElement.*
tc-webkit-htmlAttribute 	malloc	.*WebCore::Element::setAttributeMap.*
tc-webkit-atomicHTMLToken 	malloc	.*AtomicHTMLToken.*
tc-webkit-htmltree		malloc	.*WebCore::HTMLTreeBuilder::constructTreeFromToken.*
tc-webkit-hashtable		malloc	.*WTF::HashTable::allocateTable .*
tc-webkit-operator		malloc	.*WTF::fastMalloc WTF::\S*::operator .*
tc-webkit-fastmalloc		malloc	.*WTF::fastMalloc .*
tc-v8-malloced			malloc	.*v8::internal::Malloced::New.*
tc-v8-nonheap			malloc	.*v8::.*
tc-webkit			malloc	.*(WTF::|WebCore::|WebKit::).*
tc-ftmemqalloc			malloc	.*ft_mem_qalloc.*
tc-pixman			malloc	.*pixman_image_create_bits.*
tc-stdstring			malloc	.*std::string::_Rep::_S_create.*
tc-gnualloc-rbtree		malloc	.*__gnu_cxx::new_allocator::allocate std::_Rb_tree::.*
tc-gnualloc			malloc	.*__gnu_cxx::new_allocator::allocate.*
tc-sqlite			malloc	.*sqlite3MemMalloc.*
tc-sk				malloc	.*sk_malloc_flags.*
tc-no-policy			malloc	.*
tc-total-log			default	default
tc-no-log			default	default
tc-total-record			default	default
tc-unused			default	default
tc-total			default	default
other-total-log			default	default
